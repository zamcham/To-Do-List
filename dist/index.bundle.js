"use strict";(self.webpackChunkwebpack_boilerplate=self.webpackChunkwebpack_boilerplate||[]).push([[826],{28:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"html {\n  font-size: 62.5%;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 400;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: #ededed;\n}\n\n.container {\n  background-color: white;\n  width: 30%;\n  min-width: 400px;\n  margin: 2rem auto;\n  font-size: 1.4rem;\n  box-shadow: 0 7px 8px rgb(191, 191, 191);\n}\n\n.container ul {\n  display: flex;\n  flex-direction: column;\n}\n\n.container li {\n  list-style: none;\n  padding: 1rem 1rem;\n  border-top: solid rgb(210, 210, 210) 1px;\n}\n\n.container li button {\n  margin-left: 2rem;\n}\n\n.container input {\n  margin-right: 0.5rem;\n  border: none;\n}\n\n.container input:focus {\n  outline: #fff;\n}\n\n.taskTime {\n  border-bottom: solid rgb(210, 210, 210) 1px;\n}\n\n.addTaskField {\n  font-style: italic;\n  color: gray;\n}\n\n.taskTime,\n.addTaskField {\n  padding: 1rem 1rem;\n}\n\n.completedButton {\n  text-align: center;\n  padding: 1rem 1rem;\n  background-color: #ededed;\n  color: gray;\n}\n\n#clearButton {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: gray;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.incomplete {\n  color: black;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,qCAAqC;EACrC,gBAAgB;AAClB;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,UAAU;EACV,gBAAgB;EAChB,iBAAiB;EACjB,iBAAiB;EACjB,wCAAwC;AAC1C;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;EACpB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,2CAA2C;AAC7C;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;AACb;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,eAAe;EACf,WAAW;AACb;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,YAAY;AACd",sourcesContent:["html {\n  font-size: 62.5%;\n  font-family: 'Montserrat', sans-serif;\n  font-weight: 400;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: #ededed;\n}\n\n.container {\n  background-color: white;\n  width: 30%;\n  min-width: 400px;\n  margin: 2rem auto;\n  font-size: 1.4rem;\n  box-shadow: 0 7px 8px rgb(191, 191, 191);\n}\n\n.container ul {\n  display: flex;\n  flex-direction: column;\n}\n\n.container li {\n  list-style: none;\n  padding: 1rem 1rem;\n  border-top: solid rgb(210, 210, 210) 1px;\n}\n\n.container li button {\n  margin-left: 2rem;\n}\n\n.container input {\n  margin-right: 0.5rem;\n  border: none;\n}\n\n.container input:focus {\n  outline: #fff;\n}\n\n.taskTime {\n  border-bottom: solid rgb(210, 210, 210) 1px;\n}\n\n.addTaskField {\n  font-style: italic;\n  color: gray;\n}\n\n.taskTime,\n.addTaskField {\n  padding: 1rem 1rem;\n}\n\n.completedButton {\n  text-align: center;\n  padding: 1rem 1rem;\n  background-color: #ededed;\n  color: gray;\n}\n\n#clearButton {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: gray;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.incomplete {\n  color: black;\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=o.base?s[0]+o.base:s[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=r(p,o);o.byIndex=c,e.splice(c,0,{identifier:A,updater:f,references:1})}i.push(A)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var s=o(n,r),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},95:(n,e,t)=>{var o=t(379),r=t.n(o),a=t(795),i=t.n(a),c=t(569),s=t.n(c),d=t(565),l=t.n(d),A=t(216),u=t.n(A),p=t(589),f=t.n(p),m=t(28),g={};g.styleTagTransform=f(),g.setAttributes=l(),g.insert=s().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=u(),r()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;let E=JSON.parse(localStorage.getItem("tasks"))||[];document.getElementById("clearButton").addEventListener("click",(()=>{E=E.filter((n=>!n.completed)),localStorage.setItem("tasks",JSON.stringify(E))}));const C=JSON.parse(localStorage.getItem("tasks"))||[];function h(){localStorage.setItem("tasks",JSON.stringify(C))}function B(n){if(void 0!==n)C.splice(n,1);else for(let n=C.length-1;n>=0;n-=1)C[n].completed&&C.splice(n,1);!function(){for(let n=0;n<C.length;n+=1)C[n].index=n+1}(),h(),b()}function b(){const n=document.getElementById("tasks");n.innerHTML="",C.sort(((n,e)=>n.index-e.index)),C.forEach((e=>{const t=document.createElement("li"),o=document.createElement("input");!function(n,e,t){n.type="checkbox",n.checked=e.completed,n.addEventListener("change",(()=>{e.completed=n.checked,localStorage.setItem("tasks",JSON.stringify(E)),t.classList.toggle("completed")}))}(o,e,t);const r=document.createElement("input");r.type="text",r.value=e.description,r.addEventListener("dblclick",(()=>{r.disabled=!1,r.focus()})),r.addEventListener("blur",(()=>{e.description=r.value,h()}));const a=document.createElement("button");a.textContent="Delete",a.addEventListener("click",(()=>{B(C.indexOf(e))})),t.appendChild(o),t.appendChild(r),t.appendChild(a),t.classList.add(e.completed?"completed":"incomplete"),n.appendChild(t)}))}document.addEventListener("DOMContentLoaded",b);const v=document.getElementById("new-task");v.addEventListener("keypress",(n=>{if(13===n.keyCode){n.preventDefault();const e=v.value;e&&(function(n){const e={description:n,completed:!1,index:C.length+1};C.push(e),h(),b()}(e),v.value="")}})),document.querySelector(".completedButton").addEventListener("click",(()=>{B()}))}},n=>{n(n.s=95)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,